# speed up ideas:
# - avoid creating production build multiple times (its done in e2e jobs)
# - create custom docker image for codechecks jobs

version: 2

jobs:
  install:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - checkout
      - restore_cache:
            keys:
            - v5-dependencies-{{ checksum "package.json" }}

      - run: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
            - ~/.cache
          key: v5-dependencies-{{ checksum "package.json" }}

  test:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
          - v5-dependencies-{{ checksum "package.json" }}
      - run: 
          name: Run linting & tests
          command: yarn test

  test-e2e:
    machine:
      enabled: true
      image: circleci/classic:201808-01
      docker_layer_caching: true
    parallelism: 3
    steps:
      - checkout
      - restore_cache:
          keys:
          - v5-dependencies-{{ checksum "package.json" }}
      - run: .circleci/install-yarn.sh
      - run: 
          name: Get & run locanode and cache image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS && ./scripts/dev.sh
      - run: 
          name: Wait for localnode to be up
          command: |
            ./.circleci/wait-for-it.sh localhost:8545 -t 10
            ./.circleci/wait-for-it.sh localhost:5432 -t 10
            ./.circleci/wait-for-it.sh localhost:3001 -t 10
            sleep 10
      - run: 
          name: Run build & e2e tests
          command: |
            source /opt/circleci/.nvm/nvm.sh
            ENV=dev yarn build:ci
            ./.circleci/run-e2e.sh

      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - cypress/screenshots

  codechecks:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get update -y
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get upgrade -y
      - run:
          name: Install Chrome headless dependencies
          working_directory: /
          command: |
            sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
            libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
            ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget --fix-missing
      - checkout
      - restore_cache:
            keys:
            - v5-dependencies-{{ checksum "package.json" }}
      - run: PUBLIC_URL=. ENV=dev yarn build
      - run: DEBUG=codechecks:* yarn codechecks

  codechecks-e2e:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get update -y
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get upgrade -y
      - run:
          name: Install Chrome headless dependencies
          working_directory: /
          command: |
            sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
            libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
            ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget --fix-missing
      - checkout
      - restore_cache:
            keys:
            - v5-dependencies-{{ checksum "package.json" }}
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy all screenshots in one place
          working_directory: /tmp/workspace
          command: |
            mkdir -p /home/circleci/project/__screenshots__
            cp `find  | grep png` /home/circleci/project/__screenshots__
      - run:
          command: yarn codechecks codechecks-e2e-vis-reg.ts

  deploy_dev:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - checkout
      - restore_cache:
            keys:
            - v5-dependencies-{{ checksum "package.json" }}
      - run: yarn run deploy:dev

  deploy_prod:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - add_ssh_keys:
          fingerprints:
            - "d2:4f:e3:c0:5d:8e:2b:14:6b:67:74:e2:2f:f2:a8:43"
      - checkout
      - restore_cache:
            keys:
            - v5-dependencies-{{ checksum "package.json" }}
      - run:
          name: Configure git defaults
          command:  git config user.email "circleci@makerdao.com" && git config user.name "CircleCI"
      - run:
          name: Deploying to production
          command: yarn run deploy:prod

workflows:
  version: 2

  mainflow:
    jobs:
      - install
      - test:
          requires: 
            - install
          filters:
            branches:
              ignore:
                - gh-pages
      - test-e2e:
          requires:
            - install
          filters:
            branches:
              ignore:
                - gh-pages
      - codechecks:
          requires: 
            - install
          filters:
            branches:
              ignore:
                - gh-pages

      - codechecks-e2e:
          requires:
            - test-e2e
          filters:
            branches:
              ignore:
                - gh-pages
      - deploy_dev:
          requires:
            - test
            - test-e2e
          filters:
            branches:
              only: dev
      - deploy_prod:
          requires:
            - test
            - test-e2e
          filters:
            branches:
              only: master
